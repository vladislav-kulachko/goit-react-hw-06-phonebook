{"version":3,"sources":["components/Filter/ContactFilter.module.scss","redux/phonebook/actions.jsx","components/Form/ContactForm.jsx","components/Filter/ContactFilter.jsx","components/List/ContactList.jsx","App.jsx","redux/phonebook/reducers.jsx","redux/store.jsx","index.js","components/Form/ContactForm.module.scss","components/List/ContactList.module.scss","App.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","delContact","filterValue","ContactForm","useState","setName","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handlerContactAdd","e","target","value","className","s","form","onSubmit","preventDefault","find","contact","alert","label","input","type","pattern","title","required","onChange","button","ContactFilter","ContactList","filteredContacts","filter","toLowerCase","search","list","length","notify","map","item","phone","onClick","App","container","contactsSection","titleList","createReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b7d34b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__y6x3K\",\"input\":\"ContactFilter_input__1t70Q\"};","import {createAction} from '@reduxjs/toolkit';\r\nimport {v4 as uuidv4} from 'uuid';\r\n// import types from './types';\r\n\r\nexport const addContact = createAction('phonebook/add', (name, number) => ({\r\n  payload: {id: uuidv4(), name: name, number: number},\r\n}));\r\n// export const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {id: uuidv4(), name: name, number: number},\r\n// });\r\n\r\nexport const delContact = createAction('phonebook/delete');\r\n// export const delContact = id => ({\r\n//   type: types.DEL,\r\n//   payload: id,\r\n// });\r\n\r\nexport const filterValue = createAction('phonebook/changeFilter');\r\n// export const filterContacts = filter => ({\r\n//   type: types.FILTER,\r\n//   payload: filter,\r\n// });\r\n","// import {connect} from 'react-redux';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useState} from 'react';\r\nimport s from './ContactForm.module.scss';\r\nimport {addContact} from '../../redux/phonebook/actions';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerContactAdd = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  const handlerSubmitFormClick = e => {\r\n    e.preventDefault();\r\n    if (name !== '' && number !== '') {\r\n      if (contacts.find(contact => contact.number === number)) {\r\n        alert(`Этот номер ${number} уже есть в списке`);\r\n        return;\r\n      } else if (contacts.find(contact => contact.name === name)) {\r\n        alert(`Это имя ${name} уже есть в списке`);\r\n        return;\r\n      } else {\r\n        dispatch(addContact(name, number));\r\n        setName('');\r\n        setNumber('');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handlerSubmitFormClick}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handlerContactAdd}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handlerContactAdd}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n// const mapStateToProps = ({contacts: {items}}) => ({\r\n//   contacts: items,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import s from './ContactFilter.module.scss';\r\n// import {connect} from 'react-redux';\r\nimport {useDispatch} from 'react-redux';\r\nimport {filterValue} from '../../redux/phonebook/actions';\r\n\r\nexport default function ContactFilter() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        className={s.input}\r\n        name=\"find\"\r\n        title=\"Введите имя или название контакта\"\r\n        onChange={e => dispatch(filterValue(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n// const mapDispatchToProps = dispatch => ({\r\n//   findContact: e => dispatch(filterContacts(e.target.value)),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactFilter);\r\n","// import {connect} from 'react-redux';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {delContact} from '../../redux/phonebook/actions';\r\nimport s from './ContactList.module.scss';\r\n\r\nexport default function ContactList() {\r\n  const filteredContacts = useSelector(({contacts: {items, filter}}) =>\r\n    items.filter(({name}) => name.toLowerCase().search(filter) !== -1),\r\n  );\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className={s.list}>\r\n      {filteredContacts.length === 0 ? (\r\n        <li className={s.notify}>\r\n          Oops, this is empty... Please add your contacts!\r\n        </li>\r\n      ) : (\r\n        filteredContacts.map(({id, name, number}) => (\r\n          <li className={s.item} key={id}>\r\n            {name}:<span className={s.phone}>{number}</span>\r\n            <button\r\n              className={s.button}\r\n              id={id}\r\n              type=\"button\"\r\n              onClick={e => dispatch(delContact(e.target.id))}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n// const mapStateToProps = ({contacts: {items, filter}}) => ({\r\n//   filteredContacts: items.filter(\r\n//     ({name}) => name.toLowerCase().search(filter) !== -1,\r\n//   ),\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//   delContact: e => dispatch(delContact(e.target.id)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import s from './App.module.scss';\r\nimport ContactForm from './components/Form/ContactForm';\r\nimport ContactFilter from './components/Filter/ContactFilter';\r\nimport ContactList from './components/List/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <section className={s.container}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm></ContactForm>\r\n      <section className={s.contactsSection}>\r\n        <h2 className={s.titleList}>Contacts list</h2>\r\n        <ContactFilter></ContactFilter>\r\n        <ContactList></ContactList>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n","// import types from './types';\r\nimport {combineReducers} from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport {addContact, delContact, filterValue} from './actions';\r\n\r\n// {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: ''\r\n//   }\r\n// }\r\n\r\n// const items = (state = [], {type, payload}) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DEL:\r\n//       return state.filter(contact => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst items = createReducer([], {\r\n  [addContact]: (state, {payload}) => [...state, payload],\r\n  [delContact]: (state, {payload}) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filter = createReducer('', {\r\n  [filterValue]: (state, {payload}) => payload,\r\n});\r\n\r\nexport const contacts = combineReducers({\r\n  items: items,\r\n  filter: filter,\r\n});\r\n","// import {createStore, combineReducers} from 'redux';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport {contacts} from './phonebook/reducers';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// import {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts,\r\n// });\r\n// const store = createStore(rootReduser, composeWithDevTools());\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {contacts: persistReducer(contactsPersistConfig, contacts)},\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    logger,\r\n  ],\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './index.scss';\r\nimport App from './App.jsx';\r\nimport {store, persistor} from './redux/store';\r\nimport {PersistGate} from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3gZG4\",\"label\":\"ContactForm_label__S-wTY\",\"input\":\"ContactForm_input__3S4hF\",\"button\":\"ContactForm_button__1moTH\",\"puls\":\"ContactForm_puls__1VTQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3yLa5\",\"item\":\"ContactList_item__2fJcr\",\"phone\":\"ContactList_phone__2Acmp\",\"button\":\"ContactList_button__3LUZk\",\"puls\":\"ContactList_puls__1pOkI\",\"notify\":\"ContactList_notify__1clzJ\",\"blink\":\"ContactList_blink__HnZyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2wKyO\",\"title\":\"App_title__RNW-E\",\"titleList\":\"App_titleList__O6Z_9\"};"],"sourceRoot":""}